//Array
//time complexity: O(n); space complexity: O(1)
class Solution {
    public int lengthOfLongestSubstring(String s) {
        if (s.length() == 0 || s == null) return 0;
        if (s.length() == 1) return 1;
        int[] arr = new int[256];
        Arrays.fill(arr, -1);
        int len = 0;
        int start = -1;
        for (int i=0;i<s.length();i++) {
            start = Math.max(arr[s.charAt(i)], start);
            arr[s.charAt(i)] = i;//store the index
            len = Math.max(i-start, len);
        }
        return len;
    }
}
