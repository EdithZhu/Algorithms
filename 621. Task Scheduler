class Solution {
	public int leastInterval(char[] tasks, int n) {
		Map<Character,Integer> map=new HashMap<>();
		for(char key:tasks) map.put(key,map.getOrDefault(key,0)+1);
		Map<Character,Integer> tmap=new TreeMap<>((a,b)->map.get(a)>= map.get(b)?-1:1);
		int cnt=0, temp=n+1;
		while(temp>0 && map.size()>0){
			tmap.clear();
			tmap.putAll(map);
			List<Character> lst=new ArrayList<>();
			lst.addAll(tmap.keySet());
			int val=temp;
			for(int i=0;i<Math.min(val,lst.size());i++){
				if(map.get(lst.get(i))==1) map.remove(lst.get(i));
				else{
					map.put(lst.get(i),map.get(lst.get(i))-1);
				}
				temp--;
				cnt++;
			}
			if(temp>0 && map.size()>0) cnt+=temp;
			temp=n+1;
		}
		return cnt;
	}
}

