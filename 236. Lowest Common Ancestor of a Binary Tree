//recursive
//time complexity: O(n); space complexity: O(n)
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if (root == null) return null;
        if (root == p || root == q) return root;
        TreeNode node1 = lowestCommonAncestor(root.left,p,q);
        TreeNode node2 = lowestCommonAncestor(root.right,p,q);
        if (node1 != null && node2 != null) return root;
        if (node1 != null)
            return node1;
        else return node2;
    }
}
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
