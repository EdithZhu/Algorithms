class Solution {
    public double findMaxAverage(int[] nums, int k) {
        double left = nums[0];
        double right = nums[0];        
        for (int num : nums) {
            left = Math.min(num,left);
            right = Math.max(num,right);
        }        
        while (right - left > 1e-5) {
            double mid = (left + right) / 2;
            if (check(nums,k,mid)) left = mid;
            else right = mid;
        }
        return left;
    }    
    private boolean check(int[] nums, int k, double mid) {
        double currSum = 0;
        double prevSum = 0;
        double minSum = 0;        
        for (int i=0;i<nums.length;i++) {
            currSum += nums[i] - mid;
            if (i>=k-1) {
                if (currSum - minSum >= 0) return true;
                prevSum += nums[i-k+1] - mid;
                minSum = Math.min(minSum,prevSum);
            }
        }
        return false;
    }
}
