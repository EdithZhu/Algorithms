//math - cannot convert Listnode to int/long, stack overflow!
//time complexity: O(n);space complexity: O(n)
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {        
        ListNode res = new ListNode(0);
        ListNode tmp = res;
        int carry = 0;
        while (l1 != null || l2 != null) {
            if (l1 == null) {
                tmp.next = new ListNode((carry + l2.val) % 10);
                carry = (carry + l2.val) / 10;
                l2 = l2.next;
                tmp = tmp.next;
            } else if (l2 == null) {
                tmp.next = new ListNode((carry + l1.val) % 10);
                carry = (carry + l1.val) / 10;
                l1 = l1.next;
                tmp = tmp.next;
            } else {
                tmp.next = new ListNode((carry + l1.val + l2.val) % 10);
                carry = (carry + l1.val + l2.val) / 10;
                l1 = l1.next;
                l2 = l2.next;
                tmp = tmp.next;
            }
        }
        if (carry == 1) //be careful with the highest carry!!!!!
            tmp.next = new ListNode(1);
        return res.next;
    }
}
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
