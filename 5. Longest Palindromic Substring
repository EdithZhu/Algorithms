//symmetry axis
//time complexity: O(n*n); space complexity: O(1)
class Solution {
    public String longestPalindrome(String s) {
        String maxStr = "";
        for(int i = 0; i < s.length(); i++){
            String str = helper(s, i, i);//odd
            if(maxStr.length() < str.length())
                maxStr = str;
            str = helper(s, i, i + 1);//even
            if(maxStr.length() < str.length()) 
                maxStr = str;
        }
        return maxStr;
    }
    private String helper(String s, int i, int j){
        while(i >= 0 && j < s.length() && s.charAt(i) == s.charAt(j)){
            i--;
            j++;
        }
        return s.substring(i + 1, j);//go back to the inner layer
    }
}

