//dynamic programming

class Solution {
    List<String> res = new ArrayList<>();
    public List<String> wordBreak(String s, List<String> wordDict) {
        List<Integer>[] dp = new ArrayList[s.length()+1];
        for(int i = 0; i < dp.length; i++)
            dp[i] = new ArrayList<Integer>();
        dp[0].add(0);
        Set<String> wordSet = new HashSet<>(wordDict);
        for(int i = 1; i <= s.length(); i++){
            for(int j = 0; j < i; j++){
                if(!dp[j].isEmpty() && wordSet.contains(s.substring(j,i))){
                    dp[i].add(j);
                }
            }
        }
        getResult(dp, "", s.length(), s);
        return res;
    }
    public void getResult(List<Integer>[] dp, String curr, int index, String str){
        if(index == 0){
            curr = curr.trim();
            res.add(curr);
            return;
        }
        for(int beg : dp[index])
            getResult(dp, str.substring(beg, index)+" "+ curr, beg, str);
    }
}
