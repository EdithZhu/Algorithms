//math, tricky - nums containing n + 1 integers where each integer is in the range [1, n] inclusive
//1. without modifying the array nums;2. space O(1);3. time <O(n*n)
//time complexity: O(n); space complexity: O(1)
class Solution {
    public int findDuplicate(int[] nums) {
        for (int i=0;i<nums.length;i++) {
            int tmp = Math.abs(nums[i]);
            if (nums[tmp] < 0) return tmp;
            else nums[tmp] = -nums[tmp];
        }
        return -1;
    }
}



//hashmap
//time complexity: O(n); space complexity: O(n)
class Solution {
    public int findDuplicate(int[] nums) {
        HashMap<Integer,Integer> map = new HashMap<>();
        for (int num : nums) {
            map.put(num, map.getOrDefault(num,0) + 1);
            if (map.get(num) == 2)
                return num;
        }
        return -1;
    }
}
