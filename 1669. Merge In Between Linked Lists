class Solution {
    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
        ListNode head = new ListNode(-1);
        head.next = list1;
        ListNode fast = head;
        ListNode slow = head;   
        while(a > 0) {
            slow = slow.next;
            a--;
        }
        while(b >= 0) {
            fast = fast.next;
            b--;
        }    
        ListNode p = list2;
        while(p.next != null) 
            p = p.next;
        slow.next = list2;
        p.next = fast.next;
        fast.next = null;
        return head.next;
    }
}
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
