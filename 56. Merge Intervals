//sort
//time complexity: O(nlogn);space complexity: O(n)
class Solution {
    public int[][] merge(int[][] intervals) {
        if (intervals.length == 0 || intervals == null) return intervals;
        Arrays.sort(intervals, (a, b) -> a[0]-b[0]);
        int prevStart = 0, prevEnd = 0; 
        List<int[]> lst = new ArrayList<>();
        for (int[] interval : intervals) {
            if (lst.isEmpty() || prevEnd < interval[0]){
                lst.add(interval);
                prevStart = interval[0];
                prevEnd = interval[1];
            }
            else {
                prevEnd = Math.max(prevEnd, interval[1]);
                lst.set(lst.size()-1, new int[]{prevStart,prevEnd});
            }
        }
        return lst.toArray(new int[lst.size()][]);
    }
}

