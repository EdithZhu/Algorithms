//iterative-interpolate
//time complexity: O(n!);space complexity: O(n!)
class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> lst = new ArrayList<>();
        if (nums == null || nums.length == 0) return lst;
        lst.add(Arrays.asList(nums[0]));
        List<List<Integer>> tmp;
        for (int i=1;i < nums.length;i++) {
            tmp = new ArrayList<>();
            for (List<Integer> permu : lst) {
                for (int position=0;position<=permu.size();position++) {
                    List<Integer> prev = new ArrayList<>(permu);
                    prev.add(position, nums[i]);
                    tmp.add(prev);
                }
            }
            lst = tmp;
        }
        return lst;
    }
}
