//Constraints: s consists of digits only.
class Solution {
    public List<String> restoreIpAddresses(String s) {
        ArrayList<String> lst = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        helper(s,sb,lst,0,0);
        return lst;
    }
    
    private void helper(String s, StringBuilder sb, ArrayList<String> lst, int start, int cnt){
        int len = s.length();
        if (cnt == 4 && start == len) lst.add(sb.toString());
        else if (cnt == 4) return;
        for (int i=start;i<len;i++) {
            String str = s.substring(start,i+1);
            if (str.length()>1 && str.charAt(0)=='0') return;
            int val = Integer.parseInt(str);
            if (val>=0 && val<=255) {
                StringBuilder sbTmp = new StringBuilder(sb);
                sb.append(s.substring(start, i+1));
                if (cnt < 3) sb.append(".");
                helper(s,sb,lst,i+1,cnt+1);
                sb = sbTmp;
            } 
            else if (val > 255) return;
        }
    }
}

