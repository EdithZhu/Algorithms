//recursive
class Solution {
    private int deepest;
    private int sum = 0;
    public int deepestLeavesSum(TreeNode root) {
        deepest = 0;
        helper(root, 0);
        return sum;
    }
    private void helper(TreeNode root, int depth) {
        if (root == null) return;
        if (depth == deepest) sum = sum + root.val;
        else if (depth > deepest) {
            deepest = depth;
            sum = root.val;
        }
        helper(root.left, depth+1);
        helper(root.right, depth+1);
    }
}
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
