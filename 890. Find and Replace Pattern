//2 map
class Solution {
    public List<String> findAndReplacePattern(String[] words, String pattern) {
        List<String> res = new ArrayList<>();
        for (String word : words) {
            if (helper(word, pattern)) res.add(word);
        }
        return res;
    }
    
    private  boolean helper(String word, String pattern) {
        Map<Character, Character> map1 = new HashMap<>();
        Map<Character, Character> map2 = new HashMap<>();
        int lenW = word.length();
        int lenP = pattern.length();
        if (lenW != lenP) return false;
        for(int i=0;i<lenW;i++) {
            char chaW = word.charAt(i);
            char chaP = pattern.charAt(i);
            if (!map1.containsKey(chaW)) map1.put(chaW,chaP);
            if (!map2.containsKey(chaP)) map2.put(chaP,chaW);
            if (map1.get(chaW) != chaP || map2.get(chaP) != chaW) return false;
        }
        return true;
    }
}
